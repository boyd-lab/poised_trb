---
title: "POISED_trb_bulk_analysis"
author: "Valeriia Skatova"
format: html
editor: visual
---

```{r}
library(data.table)
library(dplyr)
library(readr)
```

## Barcodes metadata

```{r}
#batch1_bulk_trb_poised<-read_tsv('/data/vskatova/vskatova/poised_trb/poised_trb_deepSeq#/sample_table_1.tsv')
#metadata_batch1_bulk_trb_poised<-read_tsv('/data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/analysis/metadata_run1_deepSeq.tsv')
sample_table_mixcr_pool1<-read_tsv('/data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/sample_table.tsv') |> 
  select(SAMPLE1,SAMPLE2,Sample) |> 
  mutate(Sample=paste0(Sample,'.mic'))
  
write_tsv(sample_table_mixcr_pool1,'/data/raw/poised_trb_reseq/mitool/poised_trb_batch1.tsv')

sample_table_mixcr_pool2<-read_tsv('/data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/sample_table_run2.tsv') |> 
   select(SAMPLE1,SAMPLE2,Sample) |> 
    mutate(Sample=paste0(Sample,'.mic'))

write_tsv(sample_table_mixcr_pool2,'/data/raw/poised_trb_reseq/mitool/poised_trb_batch2.tsv')


sample_table_mixcr_pool3<-read_tsv('/data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/mixcr_run3/sample_table_run3.tsv') |> 
  select(SAMPLE1,SAMPLE2,Sample)
write_tsv(sample_table_mixcr_pool3,'/data/raw/poised_trb_reseq/mitool/poised_trb_batch3.tsv')

```

## Upstream MiXCR

### Alignment

```{bash}
mixcr align --report /data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/mixcr/result.align.report.txt
--preset generic-tcr-amplicon \
--rigid-left-alignment-boundary \
--floating-right-alignment-boundary C \
--split-by-sample \
--rna \
--species hsa \
--sample-table /data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/sample_table.tsv \
--tag-pattern ^NNNN(SAMPLE1:N{8})(R1:*)(SAMPLE2:N{8})NNNNAGATCGG\^(R2:*)  #(for batch 1/2 )
--tag-pattern ^N{4}(SAMPLE1:N{8})(R1:*)\^N{4}(SAMPLE2:N{8})(R2:*) #for batch 3
#Pool2_S1_L{{n}}_R1_001.fastq.gz Pool2_S1_L{{n}}_R2_001.fastq.gz #for batch 1
#M355plusNova_S1_L{{n}}_R1_001.fastq.gz M355plusNova_S1_L{{n}}_R2_001.fastq.gz  #for batch 2
#PSD-TCRb_S1_L{{n}}_R1_001.fastq.gz PSD-TCRb_S1_L{{n}}_R2_001.fastq.gz #for batch 3
/data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/mixcr/result.vdjca
```

### Assemble

```{bash}
ls *.vdjca| parallel --line-buffer -j 10 'mixcr assemble \
--report /data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/mixcr/{=s:.vdjca:.assemble.report.txt:= } \
--json-report /data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/mixcr/{=s:.vdjca:.assemble.report.json:= } \ 
{} /data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/mixcr/{=s:.vdjca:clns:=}
```

### Export Clonsets

```{bash}
ls *clns | parallel --line-buffer -j 10 'mixcr exportClones -cloneId -count -fraction -nFeature CDR3 -aaFeature CDR3 -vGene -jGene -dGene --filter-out-of-frames --filter-stops -f {} /data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/mixcr/{=s:.clns:.tsv:=}' 
```

## Mitool reparsing

#### batch 1/2 (the same tag pattern)

```{bash}
#match SAMPLE1 and SAMPLE2
mitool parse --pattern "^NNNN(SAMPLE1:N{8})(R1:*)(SAMPLE2:N{8})NNNNAGATCGG\^(R2:*)"  #for batch1
mitool parse --pattern "^N{4}(SAMPLE1:N{8})(R1:*)(SAMPLE2:N{8})N{4}agatcggaagag \ ^N{12}(R2:*)N{12}agatcggaagagcgtcgtg" #for batch 2
/data/raw/poised_trb_reseq/Pool2_S1_L{{n}}_{{R}}_001.fastq.gz #for batch1
/data/raw/poised_trb_reseq/M355plusNova_S1_L{{n}}_{{R}}_001.fastq.gz #for batch2
poised-trb-reseq-batch1.mic #output for batch1
poised-trb-reseq-batch2.mic #output for batch2

#create lists of barcodes as separate files
#for batch1
cut -f3 /data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/sample_table.tsv | tail -n +2| sort| uniq > SAMPLE1_whitelist_b1.txt
cut -f4 /data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/sample_table.tsv |tail -n +2|sort| uniq > SAMPLE2_whitelist_b1.txt

#for batch2
cut -f3 /data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/sample_table_run2.tsv | tail -n +2| sort| uniq > SAMPLE1_white_list_b2.txt
cut -f4 /data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/sample_table_run2.tsv | tail -n +2| sort| uniq > SAMPLE2_white_list_b2.txt

#refine tags 

#for batch 1
mitool -Xmx80g refine-tags -t SAMPLE1#file:SAMPLE1_whitelist_b1.txt -t SAMPLE2#file:SAMPLE2_whitelist_b1.txt -r poised-trb-reseq-batch1.refine.log poised-trb-reseq-batch1.mic poised-trb-reseq-batch1.refined.mic
#for batch 2
mitool -Xmx80g refine-tags -t SAMPLE1#file:SAMPLE1_white_list_b2.txt -t SAMPLE2#file:SAMPLE2_white_list_b2.txt -r poised-trb-reseq-batch2.refine.log poised-trb-reseq-batch2.mic poised-trb-reseq-batch2.refined.mic 

#reparse data (create mic files for each future fastq)
#for batch1
mitool -Xmx80g filter-by-tag-table poised-trb-reseq-batch1.refined.mic poised_trb_batch1.tsv
#for batch2
mitool -Xmx80g filter-by-tag-table poised-trb-reseq-batch2.refined.mic poised_trb_batch2.tsv

#create a pair of fastq files 
ls *.mic|parallel -j 20 --line-buffer 'mitool -Xmx20g export-fastq {} -O R1={.}_R1.fastq.gz -O R2={.}_R2.fastq.gz'


```

#### Batch 3

(only tag pattern is different, so I will write down only the first step)

```{bash}
mitool parse --pattern "^N{4}(SAMPLE1:N{8})(R1:*)\^N{4}(SAMPLE2:N{8})(R2:*)" /data/raw/poised_trb_reseq/PSD-TCRb_S1_L{{n}}_{{R}}_001.fastq.gz mitool/poised-trb-reseq-batch3.mic

```

## Filter for files, that have single-cell data

```{r}
metadata_final_poised<-fread('/data/vskatova/vskatova/poised_trb/analysis/final_metadata.tsv')
cd4_seq_corrected_only_trb<-read_tsv('/data/vskatova/poised_trb/single_cell_cd4_poised.tsv')|> inner_join(metadata_final_poised,by='Participant_PPID')

#to find patient_ids of patients with single cell data
patients_with_sc_data<-cd4_seq_corrected_only_trb |> 
  select(Participant_PPID,participant_label) |> unique()
```

```{r}
poised_trb_batch1_metadata<-read_tsv('/data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/analysis/metadata_run1_deepSeq.tsv') |> 
  mutate(filename=str_remove(sample_name,'.clns.tsv')) |> 
  select(filename,Participant_PPID,participant_label,week,tissue,Group3,age)

poised_trb_batch2_metadata<-read_tsv('/data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/metadata_run2_deepSeq.tsv') |> 
  mutate(filename=str_remove(sample_name,'.trb.tsv'),
         filename=str_remove(filename,'result.')) |> 
  select(filename,Participant_PPID,tissue,week,age,Group3)

poised_trb_batch3_metadata<-read_tsv('/data/vskatova/vskatova/poised_trb/poised_trb_deepSeq/analysis/metadata_run3.tsv') |> 
  dplyr::rename(filename=Sample) |> 
  select(filename,Participant_PPID,week,Group3)

fastq_poised_trb<-dir('/data/raw/poised_trb_reseq/mitool/mic_fastq_files/fastq_files/') |> 
  as.data.frame() |> 
  dplyr::rename(filename_fastq='dir("/data/raw/poised_trb_reseq/mitool/mic_fastq_files/fastq_files/")') |> 
  mutate(filename=str_remove(filename_fastq,'_R\\d+.fastq.gz')) |> 
 left_join(poised_trb_batch1_metadata |> 
              bind_rows(poised_trb_batch1_metadata,poised_trb_batch2_metadata,
                        poised_trb_batch3_metadata),by="filename") |> 
  mutate(tissue='PBMC') |> unique() |> 
  filter(!(is.na(Participant_PPID)&(is.na(participant_label)))) |> 
  filter(Participant_PPID %in% patients_with_sc_data$Participant_PPID) |> 
  filter(week=="W000" | week=="W052"| week=="BL02" | week=="BL01"|
           week=="BL04" | week=="W104"| week=="W117" | week=="W104A" |
            week=="W117A" | week=="W117B")
write_tsv(fastq_poised_trb,'/data/vskatova/poised_trb/metadata_fastq_poised_obly_sc.tsv')

ncbi_metadata<-fastq_poised_trb |> 
  dplyr::rename(sample_title=filename,
                isolate=Participant_PPID,
                treatment=Group3) |> 
  mutate(organism='Homo_sapiens',
         biomaterial_provider="POISED_study_Stanford_University,USA",
         geo_loc_name='USA: California', 
         tissue='PBMC') |> 
  select(-age) |> 
  inner_join(metadata_final_poised |> select(age,Sex,Age.at.enrollment.years,Participant_PPID) |> dplyr::rename(age='Age.at.enrollment.years',sex=Sex,dev_stage=age,isolate=Participant_PPID) |> unique(),by='isolate') |> 
  select(-participant_label) |> 
   write_tsv('/data/vskatova/poised_trb/ncbi_metadata.tsv')
```

```{r}
sra_metadata<-ncbi_metadata |> 
 group_by(sample_title,isolate,week,tissue,treatment,organism,biomaterial_provider,
         geo_loc_name,dev_stage, sex,age) |> 
  summarise(fastq_pair=paste(filename_fastq,collapse = ',')) |> 
  separate(col = 'fastq_pair',into=c('Filename','filename2')) |> 
  mutate('Design description'='TCRb from cDNA was amplified using custon in-house TRBV forward primers and 1 reverse specific TCRB primer',
         'Instrument model'='Illumina NovaSeq 6000',
         Platform='ILLUMINA',
         'Library layout'='paired',
         'Library selection'='PCR',
         Filetype='fastq',
         Title='bulk TCR beta seq of peanut allergic individuals',
         'Library strategy'='AMPLICON',
         'Library source'='TRANSCRIPTOMIC') |> 
  mutate('Library ID'=sample_title) |> 
  dplyr::rename('Sample name'=sample_title)
  
```

### Uploading data to SRA using Aspera connect

```{bash}
#download aspera connect for linux 
wget https://d3gcli72yxqn2z.cloudfront.net/downloads/connect/latest/bin/ibm-aspera-connect_4.2.13.820_linux_x86_64.tar.gz
#unzip the file
tar -zxvf ibm-aspera-connect_4.2.13.820_linux_x86_64.tar.gz
#actuvate the script
./ibm-aspera-connect_4.2.13.820_linux_x86_64.sh
#you might add it to path, ut i didn't do it  and run directly from the directory 

```

```         

```
